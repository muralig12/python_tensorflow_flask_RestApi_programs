#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed May 22 13:22:23 2019

@author: user
"""

# Face Recognition

# Importing the libraries
import cv2
a=0
# Loading the cascades
face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')

image=cv2.imread('/home/user/python/opencv/murali.jpg',1)
#cv2.imshow("img",image)
try:
    gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
except:
    print("Image not Found")
    exit()
canvas = detect(gray, image)
cv2.imshow('image', canvas)

# Defining a function that will do the detections
def detect(gray, frame):
    faces = face_cascade.detectMultiScale(gray, 1.3, 5)
    for (x, y, w, h) in faces:
        print (faces.shape)
        print ("Number of faces detected: " + str(faces.shape[0]))
        print("Data Found")
        cv2.putText(frame, "Number of faces detected: " + str(faces.shape[0]), (10, 30),
        cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 255), 2)
        cv2.rectangle(frame, (x, y), (x+w, y+h), (255, 0, 0), 2)
        roi_gray = gray[y:y+h, x:x+w]
        global a
        a=a+1
        roi_color = frame[y:y+h, x:x+w]
        FaceFileName = "face_" + str(y) + ".jpg"
        cv2.imwrite("/home/user/python/opencv"+FaceFileName, roi_color)
        eyes = eye_cascade.detectMultiScale(roi_gray, 1.1, 3)
        for (ex, ey, ew, eh) in eyes:
            cv2.rectangle(roi_color, (ex, ey), (ex+ew, ey+eh), (0, 255, 0), 2)
    return frame